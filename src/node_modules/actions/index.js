import {
  GET_APPS_REQUEST,
  GET_APPS_SUCCESS,
  GET_APPS_FAILURE,
  GET_POPULAR_REQUEST,
  GET_POPULAR_SUCCESS,
  GET_POPULAR_FAILURE,
  GET_APP_BY_SLUG_REQUEST,
  GET_APP_BY_SLUG_SUCCESS,
  GET_APP_BY_SLUG_FAILURE,
  APP_PAGE_OUT,
  GET_CATS_REQUEST,
  GET_CATS_FAILURE,
  GET_CATS_SUCCESS,
  GET_CAT_BY_ID_REQUEST,
  GET_CAT_BY_ID_FAILURE,
  GET_CAT_BY_ID_SUCCESS,
  GET_SEARCH_REQUEST,
  GET_SEARCH_FAILURE,
  GET_SEARCH_SUCCESS,
  UPDATE_SEARCH_QUERY,
  UPDATE_ACTIVE_CAT_ID,
  CLEAR_IDS,
} from 'actionTypes';

import {
  fetchApps as fetchAppsApi,
  fetchAppBySlug as fetchAppBySlugApi,
  fetchSearch as fetchSearchApi,
  fetchCats as fetchCatsApi,
  fetchCatById as fetchCatByIdApi,
  fetchPopular as fetchPopularApi,
} from 'api';

export const appPageOut = () => dispatch => {
  dispatch({
    type: APP_PAGE_OUT
  });
};

export const clearIds = () => dispatch => {
  dispatch({
    type: CLEAR_IDS
  });
};

export const updateActiveCatId = (id) => dispatch => {
  dispatch({
    type: UPDATE_ACTIVE_CAT_ID,
    payload: id
  });
};

export const updateSearch = text => dispatch => {
  dispatch({
    type: UPDATE_SEARCH_QUERY,
    payload: text
  });
};

export const fetchSearch = (query) => async dispatch => {
  dispatch({
    type: GET_SEARCH_REQUEST
  });
  try {
    const apps = await fetchSearchApi(query);
    dispatch({
      type: GET_SEARCH_SUCCESS,
      payload: apps
    });
  } catch (err) {
    dispatch({
      type: GET_SEARCH_FAILURE,
      payload: err.message,
    });
  }
};

export const fetchApps = () => async dispatch => {
  dispatch({
    type: GET_APPS_REQUEST
  });
  try {
    const apps = await fetchAppsApi();
    dispatch({
      type: GET_APPS_SUCCESS,
      payload: apps
    });
  } catch (err) {
    dispatch({
      type: GET_APPS_FAILURE,
      payload: err.message,
    });
  }
};

export const fetchPopular = () => async dispatch => {
  dispatch({
    type: GET_POPULAR_REQUEST
  });
  try {
    const apps = await fetchPopularApi();
    dispatch({
      type: GET_POPULAR_SUCCESS,
      payload: apps
    });
  } catch (err) {
    dispatch({
      type: GET_POPULAR_FAILURE,
      payload: err.message
    });
  }
};

export const fetchAppBySlug = id => async dispatch => {
  dispatch({
    type: GET_APP_BY_SLUG_REQUEST
  });
  try {
    const app = await fetchAppBySlugApi(id);
    dispatch({
      type: GET_APP_BY_SLUG_SUCCESS,
      payload: app
    });
    dispatch({
      type: UPDATE_ACTIVE_CAT_ID,
      payload: app.categoryId
    });
  } catch (err) {
    dispatch({
      type: GET_APP_BY_SLUG_FAILURE,
      payload: err.message
    })
  }
};

export const fetchCatById = id => async dispatch => {
  if(!id) return;
  dispatch({
    type: GET_CAT_BY_ID_REQUEST
  });
  try {
    const apps = await fetchCatByIdApi(id);
    dispatch({
      type: GET_CAT_BY_ID_SUCCESS,
      payload: apps
    })
  } catch (err) {
    dispatch({
      type: GET_CAT_BY_ID_FAILURE,
      payload: err.message
    })
  }
};

export const fetchCats = () => async dispatch => {
  dispatch({
    type: GET_CATS_REQUEST
  });
  try {
    const cats = await fetchCatsApi();
    dispatch({
      type: GET_CATS_SUCCESS,
      payload: cats
    });
  } catch (err) {
    dispatch({
      type: GET_CATS_FAILURE,
      payload: err.message,
    });
  }
};