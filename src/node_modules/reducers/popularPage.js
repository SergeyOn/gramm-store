import { pluck, mergeRight } from 'ramda';

import {
  GET_POPULAR_FAILURE,
  GET_POPULAR_REQUEST,
  GET_POPULAR_SUCCESS,
} from 'actionTypes';

const initialState = {
  ids: [],
  loading: true,
  error: null
};

export default (state = initialState, {type, payload}) => {
  switch (type) {
    case GET_POPULAR_REQUEST:
      return mergeRight(state, {
        ids: [],
        loading: true,
        error: null
      });
    case GET_POPULAR_SUCCESS:
      const newValues = pluck('id', payload);
      return mergeRight(state, {
        ids: newValues,
        loading: false,
        error: null
      });
    case GET_POPULAR_FAILURE:
      return mergeRight(state, {
        ids: [],
        loading: false,
        error: payload
      });
    default:
      return state;
  } 
};