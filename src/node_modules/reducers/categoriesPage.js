import { pluck, mergeRight } from 'ramda';

import {
  GET_CAT_BY_ID_FAILURE,
  GET_CAT_BY_ID_REQUEST,
  GET_CAT_BY_ID_SUCCESS,
  UPDATE_ACTIVE_CAT_ID,
  CLEAR_IDS
} from 'actionTypes';

const initialState = {
  ids: [],
  activeCategory: '',
  loading: false,
  error: null
};

export default (state = initialState, {type, payload}) => {
  switch (type) {
    case GET_CAT_BY_ID_SUCCESS:
      const newValues = pluck('id', payload);
      return mergeRight(state, {
        ids: newValues,
        loading: false,
        error: null,
      });
      case GET_CAT_BY_ID_REQUEST:
        return mergeRight(state, {
          loading: true,
          error: null,
      })
    case GET_CAT_BY_ID_FAILURE:
        return mergeRight(state, {
          ids: [],
          loading: false,
          error: payload,
      })
    case UPDATE_ACTIVE_CAT_ID:
      return mergeRight(state, {
        activeCategory: payload || ""
      });
    case CLEAR_IDS:
      return mergeRight(state, {
        ids: []
      });    
    default:
      return state;
  } 
};